swagger: '2.0'
info:
  description: Sample API REST
  version: 1.0.0
  title: sample-restfull
host: 'localhost:8080'
basePath: /
tags:
  - name: product-controller
    description: Product Controller
paths:
  /products:
    get:
      tags:
        - product-controller
      summary: get
      operationId: getUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - product-controller
      summary: save
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productDto
          description: productDto
          required: true
          schema:
            $ref: '#/definitions/ProductDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - product-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productDto
          description: productDto
          required: true
          schema:
            $ref: '#/definitions/ProductDto'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/products/{id}':
    delete:
      tags:
        - product-controller
      summary: delete
      operationId: deleteUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  ProductDto:
    type: object
    properties:
      description:
        type: string
      id:
        type: string
      model:
        type: string
      name:
        type: string
      price:
        type: number
        format: double
    title: ProductDto
